{"version":3,"sources":["images/home_header_emoji.png","components/Home.js","components/Snackbar.js","components/JokeCard.js","components/Filters.js","components/SearchInput.js","components/DisclaimerDialog.js","components/Jokes.js","components/Info.js","Routes.js","components/Navigation.js","components/BottomNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["Home","document","title","history","useHistory","Container","Toolbar","Stack","direction","xs","md","justifyContent","alignItems","spacing","sx","mt","lg","ml","mr","Box","textAlign","Typography","fontWeight","paragraph","variant","component","color","Button","onClick","push","size","display","width","src","emojiImage","alt","style","SimpleSnackbar","status","text","onChange","React","open","setOpen","handleClose","event","reason","action","IconButton","fontSize","Snackbar","autoHideDuration","onClose","message","JokeCard","joke","useState","showSnackbar","setShowSnackbar","snackbarMessage","setSnackbarMessage","handleCopyJoke","a","type","setup","delivery","blob","Blob","data","window","ClipboardItem","navigator","clipboard","write","Card","height","CardContent","mb","gutterBottom","category","ResponsiveDrawer","children","filters","mobileOpen","setMobileOpen","inputValue","setInputValue","handleDrawerToggle","handleCategoryChange","includes","target","name","filter","cat","countCheckedCategoryItems","counter","forEach","element","handleFlagsChange","flags","flag","countCheckedFlagsItems","drawer","Divider","List","ListItem","FormGroup","FormControlLabel","label","control","Checkbox","checked","indeterminate","flexDirection","map","index","FormHelperText","error","charAt","toUpperCase","slice","Autocomplete","disableClearable","value","language","newValue","onInputChange","newInputValue","id","options","renderInput","params","TextField","container","undefined","body","flexShrink","Drawer","ModalProps","keepMounted","sm","boxSizing","Fab","position","bottom","right","Search","styled","theme","palette","primary","borderRadius","shape","backgroundColor","alpha","common","white","marginLeft","marginBottom","breakpoints","up","SearchIconWrapper","padding","pointerEvents","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","SearchInput","fullWidth","onBlur","e","placeholder","inputProps","onKeyDown","keyCode","blur","Transition","props","ref","Slide","DisclaimerDialog","Dialog","TransitionComponent","DialogTitle","DialogContent","DialogContentText","DialogActions","localStorage","setItem","Jokes","jokes","setJokes","loading","setLoading","setFilters","shownJokes","totalJokes","fetchJokes","lang","allJokes","url","axios","get","res","concat","searchJokes","useEffect","items","Grid","item","Skeleton","animation","console","log","getItem","Filters","fixed","flexGrow","p","length","columns","unfilteredJokes","uniqueJokes","Set","has","add","flagcounter","key","filterJokes","Alert","severity","LoadingButton","loadingIndicator","Info","Routes","path","exact","Navigation","useTheme","handleListItemClick","setSelectedIndex","location","pathname","getValue","selectedIndex","AppBar","zIndex","edge","noWrap","whiteSpace","bgcolor","mode","disablePadding","ListItemButton","selected","ListItemIcon","ListItemText","FixedBottomNavigation","useLocation","setValue","Paper","left","elevation","BottomNavigation","showLabels","BottomNavigationAction","icon","App","matchMedia","matches","darkState","setDarkState","darkTheme","createTheme","lightTheme","main","background","default","paper","className","ThemeProvider","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.58027a72.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home_header_emoji.428e6c38.png\";","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport emojiImage from \"../images/home_header_emoji.png\";\r\n\r\n// MUI Components\r\nimport Container from \"@mui/material/Container\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst Home = () => {\r\n  document.title = \"JokeHub - Home\";\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Container>\r\n      <Toolbar />\r\n      <Stack\r\n        direction={{ xs: \"column\", md: \"row\" }}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={12}\r\n        sx={{\r\n          mt: { xs: 10, md: 25, lg: 15 },\r\n          ml: { xs: 5, md: 10, lg: 0 },\r\n          mr: { xs: 5, md: 10, lg: 0 },\r\n        }}\r\n      >\r\n        <Box sx={{ textAlign: { xs: \"center\", md: \"left\" } }}>\r\n          <Typography\r\n            sx={{ fontWeight: \"bold\" }}\r\n            paragraph\r\n            variant=\"h3\"\r\n            component=\"h1\"\r\n            color=\"text.primary\"\r\n          >\r\n            A Hub with Jokes I guess?\r\n          </Typography>\r\n          <Typography\r\n            paragraph\r\n            variant=\"h5\"\r\n            component=\"h3\"\r\n            color=\"text.primary\"\r\n          >\r\n            In need of some funny jokes? Look no further! <br /> We got all the\r\n            jokes you need to brighten your day!\r\n          </Typography>\r\n          <Button\r\n            onClick={() => history.push(\"/jokes\")}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n          >\r\n            Find jokes\r\n          </Button>\r\n        </Box>\r\n        <Box sx={{ display: \"flex\", width: { xs: \"70%\", md: \"45%\" } }}>\r\n          <img src={emojiImage} alt=\"\" style={{ width: \"100%\" }} />\r\n        </Box>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import * as React from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport default function SimpleSnackbar({ status, text, onChange }) {\r\n  const [open, setOpen] = React.useState(status);\r\n\r\n  React.useEffect(() => {\r\n    setOpen(status);\r\n  }, [status]);\r\n\r\n  const handleClose = (event, reason) => {\r\n    // if (reason === \"clickaway\") {\r\n    //   return;\r\n    // }\r\n    onChange(false);\r\n    setOpen(false);\r\n  };\r\n\r\n  const action = (\r\n    <React.Fragment>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={handleClose}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={text}\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nimport SimpleSnackbar from \"./Snackbar\";\r\n\r\nexport const JokeCard = ({ joke }) => {\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(false);\r\n\r\n  const handleCopyJoke = async () => {\r\n    try {\r\n      const text =\r\n        joke.type === \"single\"\r\n          ? joke.joke\r\n          : joke.setup + \"\\r\\n \\r\\n\" + joke.delivery;\r\n\r\n      var type = \"text/plain\";\r\n      var blob = new Blob([text], { type });\r\n      var data = [new window.ClipboardItem({ [type]: blob })];\r\n      await navigator.clipboard.write(data);\r\n      setShowSnackbar(false);\r\n      setShowSnackbar(true);\r\n      setSnackbarMessage(\"Joke copied to clipboard!\");\r\n    } catch (error) {\r\n      setShowSnackbar(false);\r\n      setShowSnackbar(true);\r\n      setSnackbarMessage(\"Failed to copy joke!\");\r\n    }\r\n  };\r\n\r\n  const handleSnackbar = (status) => {\r\n    setShowSnackbar(status);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ height: \"100%\" }}>\r\n      <CardContent style={{ height: \"100%\" }}>\r\n        <SimpleSnackbar\r\n          onChange={handleSnackbar}\r\n          status={showSnackbar}\r\n          text={snackbarMessage}\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n            sx={{ mr: \"auto\" }}\r\n          >\r\n            {joke.category}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={handleCopyJoke}\r\n            aria-label=\"copy joke button\"\r\n            sx={{ ml: \"auto\" }}\r\n          >\r\n            <ContentCopyIcon />\r\n          </IconButton>\r\n        </Stack>\r\n        <Typography\r\n          paragraph={joke.type !== \"single\" ? true : false}\r\n          variant=\"body2\"\r\n          color=\"text.secondary\"\r\n        >\r\n          {joke.type === \"single\" ? joke.joke : joke.setup}\r\n        </Typography>\r\n        {joke.type !== \"single\" ? (\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {joke.delivery}\r\n          </Typography>\r\n        ) : null}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JokeCard;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction ResponsiveDrawer({ children, window, onChange, filters }) {\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleCategoryChangeAll = (event) => {\r\n    const getCategories = () => {\r\n      if (event.target.checked) {\r\n        return [\"Programming\", \"Misc\", \"Dark\", \"Pun\", \"Spooky\", \"Christmas\"];\r\n      } else {\r\n        return [];\r\n      }\r\n    };\r\n    onChange({\r\n      ...filters,\r\n      category: getCategories(),\r\n    });\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    const getFilters = () => {\r\n      if (filters.category.includes(event.target.name)) {\r\n        return filters.category.filter((cat) => cat !== event.target.name);\r\n      } else {\r\n        return [...filters.category, event.target.name];\r\n      }\r\n    };\r\n\r\n    onChange({\r\n      ...filters,\r\n      category: getFilters(),\r\n    });\r\n  };\r\n\r\n  const countCheckedCategoryItems = () => {\r\n    let counter = 0;\r\n    filters.category.forEach((element) => {\r\n      counter++;\r\n    });\r\n\r\n    return counter;\r\n  };\r\n\r\n  // FLAGS\r\n  const handleFlagsChangeAll = (event) => {\r\n    const getFlags = () => {\r\n      if (event.target.checked) {\r\n        return [\r\n          \"explicit\",\r\n          \"nsfw\",\r\n          \"political\",\r\n          \"racist\",\r\n          \"religious\",\r\n          \"sexist\",\r\n        ];\r\n      } else {\r\n        return [];\r\n      }\r\n    };\r\n    onChange({\r\n      ...filters,\r\n      flags: getFlags(),\r\n    });\r\n  };\r\n\r\n  const handleFlagsChange = (event) => {\r\n    const getFilters = () => {\r\n      if (filters.flags.includes(event.target.name)) {\r\n        return filters.flags.filter((flag) => flag !== event.target.name);\r\n      } else {\r\n        return [...filters.flags, event.target.name];\r\n      }\r\n    };\r\n\r\n    onChange({\r\n      ...filters,\r\n      flags: getFilters(),\r\n    });\r\n  };\r\n\r\n  const countCheckedFlagsItems = () => {\r\n    let counter = 0;\r\n    filters.flags.forEach((element) => {\r\n      counter++;\r\n    });\r\n    return counter;\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        <ListItem key=\"categories\">\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              label=\"Categories\"\r\n              control={\r\n                <Checkbox\r\n                  checked={countCheckedCategoryItems() === 6}\r\n                  indeterminate={\r\n                    countCheckedCategoryItems() > 0 &&\r\n                    countCheckedCategoryItems() < 6\r\n                  }\r\n                  onChange={handleCategoryChangeAll}\r\n                />\r\n              }\r\n            />\r\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", ml: 3 }}>\r\n              {[\r\n                \"Programming\",\r\n                \"Misc\",\r\n                \"Dark\",\r\n                \"Pun\",\r\n                \"Spooky\",\r\n                \"Christmas\",\r\n              ].map((text, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  label={text}\r\n                  control={\r\n                    <Checkbox\r\n                      name={text}\r\n                      checked={filters.category.includes(text)}\r\n                      onChange={handleCategoryChange}\r\n                    />\r\n                  }\r\n                />\r\n              ))}\r\n            </Box>\r\n          </FormGroup>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem key=\"filters\">\r\n          <FormGroup>\r\n            <FormHelperText error={countCheckedFlagsItems() !== 6}>\r\n              Turning off flags will display inappropriate jokes\r\n            </FormHelperText>\r\n            <FormControlLabel\r\n              label=\"Flags\"\r\n              control={\r\n                <Checkbox\r\n                  checked={countCheckedFlagsItems() === 6}\r\n                  indeterminate={\r\n                    countCheckedFlagsItems() > 0 && countCheckedFlagsItems() < 6\r\n                  }\r\n                  onChange={handleFlagsChangeAll}\r\n                />\r\n              }\r\n            />\r\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", ml: 3 }}>\r\n              {[\r\n                \"explicit\",\r\n                \"nsfw\",\r\n                \"political\",\r\n                \"racist\",\r\n                \"religious\",\r\n                \"sexist\",\r\n              ].map((text, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  label={text.charAt(0).toUpperCase() + text.slice(1)}\r\n                  control={\r\n                    <Checkbox\r\n                      name={text}\r\n                      checked={filters.flags.includes(text)}\r\n                      onChange={handleFlagsChange}\r\n                    />\r\n                  }\r\n                />\r\n              ))}\r\n            </Box>\r\n          </FormGroup>\r\n        </ListItem>\r\n      </List>\r\n      <List>\r\n        <ListItem>\r\n          <Autocomplete\r\n            disableClearable\r\n            value={filters.language.label}\r\n            onChange={(event, newValue) => {\r\n              onChange({ ...filters, language: newValue }, \"lang\");\r\n            }}\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n              setInputValue(newInputValue);\r\n            }}\r\n            id=\"controllable-states-demo\"\r\n            options={[\r\n              { label: \"Spanish\", id: \"es\" },\r\n              { label: \"English\", id: \"en\" },\r\n              { label: \"Czech\", id: \"cs\" },\r\n              { label: \"German\", id: \"de\" },\r\n              { label: \"French\", id: \"fr\" },\r\n              { label: \"Portuguese\", id: \"pt\" },\r\n            ]}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Language\" />}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ width: { md: drawerWidth }, flexShrink: { md: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { sm: \"block\", md: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          sx={{\r\n            display: { xs: \"none\", md: \"block\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      {children}\r\n      <Fab\r\n        onClick={handleDrawerToggle}\r\n        sx={{\r\n          display: { sm: \"inline-flex\", md: \"none\" },\r\n          position: \"fixed\",\r\n          bottom: { xs: \"80px\", sm: \"20px\" },\r\n          right: \"20px\",\r\n        }}\r\n        variant=\"extended\"\r\n      >\r\n        <FilterAltIcon sx={{ mr: 1 }} />\r\n        Filters\r\n      </Fab>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  marginBottom: \"1rem\",\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"10ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchInput = ({ onChange, value }) => {\r\n  const handleBlur = (e) => {\r\n    if (e.target.value !== \"\") {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  const shouldBlur = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.target.blur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Search>\r\n      <SearchIconWrapper>\r\n        <SearchIcon />\r\n      </SearchIconWrapper>\r\n      <StyledInputBase\r\n        fullWidth\r\n        onBlur={handleBlur}\r\n        placeholder=\"Search…\"\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onKeyDown={shouldBlur}\r\n      />\r\n    </Search>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DisclaimerDialog() {\r\n  let history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleAgree = () => {\r\n    localStorage.setItem(\"disclaimeragreed\", \"true\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDisagree = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>{\"Disclaimer\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          When flags are turned off the website might display inappropriate\r\n          jokes. I am not responsible for the jokes that are displayed or if you\r\n          feel offended by them. The jokes come from an API and are not mine.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDisagree}>Disagree</Button>\r\n        <Button onClick={handleAgree}>Agree</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\n\r\n// MUI Components\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\n// Components\r\nimport JokeCard from \"./JokeCard\";\r\nimport Filters from \"./Filters\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport DisclaimerDialog from \"./DisclaimerDialog\";\r\n\r\nconst Jokes = () => {\r\n  document.title = \"JokeHub - Jokes\";\r\n  const [jokes, setJokes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    category: [\"Programming\", \"Misc\", \"Dark\", \"Pun\", \"Spooky\", \"Christmas\"],\r\n    flags: [\"explicit\", \"nsfw\", \"political\", \"racist\", \"religious\", \"sexist\"],\r\n    language: { label: \"English\", id: \"en\" },\r\n  });\r\n  let shownJokes = 0;\r\n  let totalJokes = 0;\r\n\r\n  const fetchJokes = async (lang) => {\r\n    setLoading(true);\r\n    let allJokes = jokes;\r\n    for (let index = 0; index < 5; index++) {\r\n      const url = `https://v2.jokeapi.dev/joke/Any?amount=10&lang=${filters.language.id}`;\r\n      const res = await axios.get(url);\r\n      allJokes = allJokes.concat(res.data.jokes);\r\n    }\r\n\r\n    setJokes(allJokes);\r\n    setLoading(false);\r\n  };\r\n\r\n  const searchJokes = async (value) => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://v2.jokeapi.dev/joke/Any?contains=${value}&amount=10&lang=${filters.language.id}`\r\n    );\r\n    if (res.data.error) {\r\n      setJokes([]);\r\n    } else {\r\n      setJokes(res.data.jokes);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJokes();\r\n  }, [filters.language]);\r\n\r\n  const handleFilterChange = (filters, type) => {\r\n    if (type === \"lang\") {\r\n      setJokes([]);\r\n    }\r\n    setFilters(filters);\r\n  };\r\n\r\n  const handleSearchChange = (value) => {\r\n    searchJokes(value);\r\n  };\r\n\r\n  let items = [];\r\n  for (let index = 0; index < 15; index++) {\r\n    items.push(\r\n      <Grid item xs={4} sm={4} lg={4} key={index}>\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rectangular\"\r\n          width={\"100%\"}\r\n          height={180}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const filterJokes = (unfilteredJokes) => {\r\n    const uniqueJokes = new Set();\r\n    console.log(unfilteredJokes);\r\n    console.log(uniqueJokes);\r\n    const filteredJokes = unfilteredJokes.filter((joke) => {\r\n      if (uniqueJokes.has(joke.id)) {\r\n        console.log(joke.id);\r\n        return false;\r\n      } else {\r\n        uniqueJokes.add(joke.id);\r\n        totalJokes++;\r\n      }\r\n      if (!filters.category.includes(joke.category)) {\r\n        return false;\r\n      }\r\n      let flagcounter = 0;\r\n      for (let key in joke.flags) {\r\n        if (joke.flags[key] === true && filters.flags.includes(key)) {\r\n          flagcounter++;\r\n        }\r\n      }\r\n      if (flagcounter > 0) {\r\n        return false;\r\n      }\r\n      shownJokes++;\r\n      return true;\r\n    });\r\n\r\n    return filteredJokes;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log(localStorage.getItem(\"disclaimeragreed\"))}\r\n      {localStorage.getItem(\"disclaimeragreed\") === \"true\" ? null : (\r\n        <DisclaimerDialog />\r\n      )}\r\n      <Filters onChange={handleFilterChange} filters={filters}>\r\n        <Container fixed component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n          <Toolbar />\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <SearchInput onChange={handleSearchChange} />\r\n          </Stack>\r\n          {jokes.length > 0 ? (\r\n            <Fragment>\r\n              <Grid\r\n                container\r\n                spacing={{ xs: 2 }}\r\n                columns={{ xs: 4, sm: 8, lg: 12 }}\r\n                alignItems=\"stretch\"\r\n              >\r\n                {filterJokes(jokes).map((joke, index) => {\r\n                  return (\r\n                    <Grid item xs={4} sm={4} lg={4} key={index}>\r\n                      <JokeCard joke={joke} />\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              {shownJokes > 0 ? null : (\r\n                <Box\r\n                  sx={{\r\n                    mt: 2,\r\n                  }}\r\n                >\r\n                  <Alert severity=\"error\">\r\n                    {`No jokes to dipslay - ${totalJokes} jokes are blocked by the filter.`}\r\n                  </Alert>\r\n                </Box>\r\n              )}\r\n              <Box\r\n                sx={{\r\n                  width: \"100%\",\r\n                  height: 100,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <LoadingButton\r\n                  onClick={() => fetchJokes()}\r\n                  loading={loading}\r\n                  loadingIndicator=\"Loading...\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Load more\r\n                </LoadingButton>\r\n              </Box>\r\n            </Fragment>\r\n          ) : loading ? (\r\n            <Grid\r\n              container\r\n              spacing={{ xs: 2 }}\r\n              columns={{ xs: 4, sm: 8, lg: 12 }}\r\n              alignItems=\"stretch\"\r\n            >\r\n              {items}\r\n            </Grid>\r\n          ) : (\r\n            <Alert severity=\"error\">\r\n              {`There are no jokes found - please try a different searchterm.`}\r\n            </Alert>\r\n          )}\r\n          <Toolbar />\r\n        </Container>\r\n      </Filters>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Jokes;\r\n","import React from \"react\";\r\n\r\nconst Info = () => {\r\n  document.title = \"JokeHub - Info\";\r\n  return <div>INFO</div>;\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Jokes from \"./components/Jokes\";\r\nimport Info from \"./components/Info\";\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/jokes\" exact component={() => <Jokes />} />\r\n      <Route path=\"/info\" component={() => <Info />} />\r\n      <Route component={() => <Home />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport AppsIcon from \"@mui/icons-material/Apps\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\n\r\nconst Navigation = ({ onChange }) => {\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleListItemClick = (event, index, path) => {\r\n    setSelectedIndex(index);\r\n    history.push(path);\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleIconButtonClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const getValue = () => {\r\n    const pathname = window.location.pathname;\r\n    switch (pathname) {\r\n      case \"/\":\r\n        return 0;\r\n      case \"/jokes\":\r\n        return 1;\r\n      case \"/info\":\r\n        return 2;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(getValue());\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar sx={{ ml: \"auto\", mr: \"auto\", zIndex: 1300 }} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={() => handleIconButtonClick()}\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"none\", sm: \"inline-flex\", md: \"none\" },\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, marginLeft: \"auto\" }}\r\n          >\r\n            JokeHub\r\n          </Typography>\r\n          <Button\r\n            onClick={(event) => handleListItemClick(event, 0, \"/\")}\r\n            sx={{ display: { xs: \"none\", md: \"block\" } }}\r\n            color=\"inherit\"\r\n          >\r\n            Home\r\n          </Button>\r\n          <Button\r\n            onClick={(event) => handleListItemClick(event, 1, \"/jokes\")}\r\n            sx={{ display: { xs: \"none\", md: \"block\" } }}\r\n            color=\"inherit\"\r\n          >\r\n            Jokes\r\n          </Button>\r\n          <Button\r\n            onClick={(event) => handleListItemClick(event, 2, \"/info\")}\r\n            sx={{ display: { xs: \"none\", md: \"block\" } }}\r\n            color=\"inherit\"\r\n          >\r\n            Info\r\n          </Button>\r\n          <Box\r\n            sx={{\r\n              whiteSpace: \"nowrap\",\r\n              width: \"min-content\",\r\n              color: \"text.primary\",\r\n              bgcolor: \"background.paper\",\r\n              borderRadius: 1,\r\n              p: 0.5,\r\n            }}\r\n          >\r\n            <IconButton\r\n              onClick={onChange}\r\n              color=\"inherit\"\r\n              aria-label={\"dark mode switch\"}\r\n            >\r\n              {theme.palette.mode === \"dark\" ? (\r\n                <Brightness7Icon />\r\n              ) : (\r\n                <Brightness4Icon />\r\n              )}\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {open ? (\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            bgcolor: \"background.paper\",\r\n            display: { xs: \"none\", sm: \"block\", md: \"none\", zIndex: 1100 },\r\n          }}\r\n          position=\"fixed\"\r\n        >\r\n          <Toolbar />\r\n          <List\r\n            disablePadding\r\n            component=\"nav\"\r\n            aria-label=\"main mailbox folders\"\r\n          >\r\n            <ListItemButton\r\n              selected={selectedIndex === 0}\r\n              onClick={(event) => handleListItemClick(event, 0, \"/\")}\r\n            >\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText sx={{ color: \"text.primary\" }} primary=\"Home\" />\r\n            </ListItemButton>\r\n            <ListItemButton\r\n              selected={selectedIndex === 1}\r\n              onClick={(event) => handleListItemClick(event, 1, \"/jokes\")}\r\n            >\r\n              <ListItemIcon>\r\n                <AppsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText sx={{ color: \"text.primary\" }} primary=\"Jokes\" />\r\n            </ListItemButton>\r\n            <ListItemButton\r\n              selected={selectedIndex === 2}\r\n              onClick={(event) => handleListItemClick(event, 2, \"/info\")}\r\n            >\r\n              <ListItemIcon>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText sx={{ color: \"text.primary\" }} primary=\"Info\" />\r\n            </ListItemButton>\r\n          </List>\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// MUI Components\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport AppsIcon from \"@mui/icons-material/Apps\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nexport default function FixedBottomNavigation() {\r\n  const history = useHistory();\r\n\r\n  const getValue = () => {\r\n    const pathname = window.location.pathname;\r\n    switch (pathname) {\r\n      case \"/\":\r\n        return 0;\r\n      case \"/jokes\":\r\n        return 1;\r\n      case \"/info\":\r\n        return 2;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setValue(getValue());\r\n  }, [location]);\r\n\r\n  const [value, setValue] = React.useState(getValue);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        display: { xs: \"block\", sm: \"none\" },\r\n      }}\r\n      elevation={3}\r\n    >\r\n      <BottomNavigation\r\n        showLabels\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n      >\r\n        <BottomNavigationAction\r\n          onClick={(e) => history.push(\"/\")}\r\n          label=\"Home\"\r\n          icon={<HomeIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          onClick={(e) => history.push(\"/jokes\")}\r\n          label=\"Jokes\"\r\n          icon={<AppsIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          onClick={(e) => history.push(\"/info\")}\r\n          label=\"Info\"\r\n          icon={<InfoIcon />}\r\n        />\r\n      </BottomNavigation>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\n// Components\r\nimport Navigation from \"./components/Navigation\";\r\nimport BottomNavigation from \"./components/BottomNavigation\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nfunction App() {\r\n  const [darkState, setDarkState] = useState(\r\n    window.matchMedia &&\r\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n  );\r\n\r\n  const handleThemeChange = () => {\r\n    setDarkState(!darkState);\r\n  };\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: \"dark\",\r\n    },\r\n  });\r\n\r\n  const lightTheme = createTheme({\r\n    palette: {\r\n      mode: \"light\",\r\n      primary: {\r\n        main: \"#c2c2c2\",\r\n      },\r\n      background: {\r\n        default: \"#e7e7e7\",\r\n        paper: \"#f1f1f1\",\r\n      },\r\n      common: {\r\n        white: \"#000000\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <ThemeProvider theme={darkState ? darkTheme : lightTheme}>\r\n          <Box sx={{ bgcolor: \"background.default\", minHeight: \"100vh\" }}>\r\n            <Navigation onChange={handleThemeChange} />\r\n            <Routes />\r\n            <BottomNavigation />\r\n          </Box>\r\n        </ThemeProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}